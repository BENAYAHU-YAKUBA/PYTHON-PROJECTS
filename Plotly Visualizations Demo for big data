#Simple stacked bar chart with Plotly
import plotly.express as px
import pandas as pd

# Load the expanded dataset
data = pd.DataFrame({
    'Month': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
    'Coca-Cola': [50000, 60000, 75000, 80000, 90000, 105000, 110000, 115000, 95000, 85000, 70000, 55000],
    'Sprite': [30000, 35000, 40000, 42000, 45000, 48000, 49000, 50000, 43000, 41000, 38000, 32000]
})

# Create a stacked bar chart with Plotly
fig = px.bar(data, x='Month', y=['Coca-Cola', 'Sprite'], title='COCACOLA KISUMU 2023 YEARLY RESULTS: Monthly Sales Analysis by Product')

# Customize the chart appearance
fig.update_traces(marker_line_color='black', opacity=0.7)
fig.update_layout(
    xaxis_title='Month',
    yaxis_title='Revenue (in KSH)',
    barmode='stack',
)

# Find the best and least revenues for each product
best_revenue_coca_cola = data['Coca-Cola'].max()
least_revenue_coca_cola = data['Coca-Cola'].min()

best_revenue_sprite = data['Sprite'].max()
least_revenue_sprite = data['Sprite'].min()

# Annotate the best and least revenues for Coca-Cola
fig.add_annotation(
    x=data['Month'][data['Coca-Cola'].idxmax()],
    y=best_revenue_coca_cola,
    text=f"Best Revenue: {best_revenue_coca_cola}Kshs",
    showarrow=True,
    arrowhead=5,
    ax=0,
    ay=-40
)

fig.add_annotation(
    x=data['Month'][data['Coca-Cola'].idxmin()],
    y=least_revenue_coca_cola,
    text=f"Least Revenue: {least_revenue_coca_cola}Kshs",
    showarrow=True,
    arrowhead=5,
    ax=0,
    ay=40
)

# Annotate the best and least revenues for Sprite
fig.add_annotation(
    x=data['Month'][data['Sprite'].idxmax()],
    y=best_revenue_sprite,
    text=f"Best Revenue: {best_revenue_sprite}Kshs",
    showarrow=True,
    arrowhead=5,
    ax=0,
    ay=-40
)

fig.add_annotation(
    x=data['Month'][data['Sprite'].idxmin()],
    y=least_revenue_sprite,
    text=f"Least Revenue: {least_revenue_sprite}Kshs",
    showarrow=True,
    arrowhead=5,
    ax=0,
    ay=40
)

# Show the plot
fig.show()


"""
______________FOR LINE CHART USE BELOW _______________
# Create a line chart for monthly sales trends
fig = px.line(data, x='Month', y=['Coca-Cola', 'Sprite'], title='Monthly Sales Trends by Product')
fig.update_traces(marker_line_color='black')
fig.update_layout(
    xaxis_title='Month',
    yaxis_title='Revenue (in KSH)',
)
fig.show()

______________FOR AREA CHART USE BELOW _______________
# Create an area chart for cumulative stacked sales
data['Coca-Cola Cumulative'] = data['Coca-Cola'].cumsum()
data['Sprite Cumulative'] = data['Sprite'].cumsum()
fig = px.area(data, x='Month', y=['Coca-Cola Cumulative', 'Sprite Cumulative'], title='Cumulative Stacked Sales Over Time')
fig.update_layout(
    xaxis_title='Month',
    yaxis_title='Cumulative Revenue (in KSH)',
)
fig.show()

______________FOR BOX PLOT USE BELOW _______________
# Create a box plot for monthly sales distribution
fig = px.box(data, x='Month', y=['Coca-Cola', 'Sprite'], title='Monthly Sales Distribution by Product')
fig.update_traces(marker_line_color='black')
fig.update_layout(
    xaxis_title='Month',
    yaxis_title='Revenue (in KSH)',
)
fig.show()

______________FOR AREA CHART WITH RANGE SLIDER USE BELOW_______________
import plotly.graph_objects as go

# Create an interactive area chart with a range slider
fig = go.Figure()

for product in ['Coca-Cola', 'Sprite']:
    fig.add_trace(go.Scatter(x=data['Month'], y=data[product], mode='lines', name=product))

fig.update_xaxes(rangeslider_visible=True)
fig.update_layout(
    title='Monthly Sales Trends by Product with Range Slider',
    xaxis_title='Month',
    yaxis_title='Revenue (in KSH)',
)
fig.show()

______________FOR HEATMAP USE BELOW_______________
import plotly.express as px

# Create a heatmap to visualize sales patterns
data_pivoted = data.pivot("Month", "Product", "Revenue")
fig = px.imshow(data_pivoted, x=data_pivoted.columns, y=data_pivoted.index,
                labels=dict(x="Product", y="Month", color="Revenue"),
                title="Sales Heatmap")
fig.show()

______________FOR SUNBURST CHART USE BELOW_______________
import plotly.express as px

# Create a sunburst chart for hierarchical sales analysis
data['Category'] = ['Beverages'] * len(data)
fig = px.sunburst(data, path=['Category', 'Month'], values='Revenue',
                  title="Hierarchical Sales Analysis by Month")
fig.show()

______________FOR ANIMATED 3-D SCATTER PLOT USE BELOW_______________
import plotly.express as px
import pandas as pd

# Load the sample dataset
data = pd.read_csv('air_quality_data.csv')

# Create an animated 3D scatter plot
fig = px.scatter_3d(data, x='Station_A', y='Station_B', z='Station_C', animation_frame='Month',
                    title='Air Quality Change Over Time', labels={'Station_A': 'Station A', 'Station_B': 'Station B', 'Station_C': 'Station C'})

# Customize the appearance
fig.update_traces(marker=dict(size=5, opacity=0.7))
fig.update_layout(scene=dict(xaxis_title='PM2.5 at Station A', yaxis_title='PM2.5 at Station B', zaxis_title='PM2.5 at Station C'))

# Show the animated plot
fig.show()

"""
